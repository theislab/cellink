import os

# Configurations
#CHROMOSOMES = list(range(1, 23))  # Chromosomes 1 to 22
CHROMOSOMES = list(range(22, 23))  # test 22
INPUT_DIR = "/data/ceph/hdd/project/node_09/sys_gen_students/2024_2025/project04_rare_variant_sc/input_data/filter_vcf_r08"
OUTPUT_DIR = "/s/project/sys_gen_students/2024_2025/project04_rare_variant_sc/output"
EIGENVECOTOR = "/s/project/sys_gen_students/2024_2025/project04_rare_variant_sc/input_data/pcdir/wgs.dose.filtered.R2_0.8.filtered.pruned.eigenvec"
DUMP_DIR = "/s/project/sys_gen_students/2024_2025/project04_rare_variant_sc/output/association/dump"

rule all:
    input:
        # run only until burdens are computed
        #expand(f"{OUTPUT_DIR}/burdens/chr{{chrom}}_all_burdens.parquet", chrom=CHROMOSOMES) 
        # run all: 
        expand(f"{OUTPUT_DIR}/association/chr{{chrom}}_all_results_10_genes.pkl", chrom=CHROMOSOMES)

# Rule to process each .vcz file
rule data_annotation:
    threads: 8
    input:
        vcz=lambda wildcards:(f"{INPUT_DIR}/chr{wildcards.chrom}.dose.filtered.R2_0.8.vcz")
    output:
        pkl=f"{OUTPUT_DIR}/annotations/chr{{chrom}}_data_test.pkl",
    log:
        out="burden_testing_logs/{chrom}_data_anno_stdout.log",
        err="burden_testing_logs/{chrom}_data_anno_stderr.err"
    shell:
        """
        python run_data_annotation.py -c {wildcards.chrom} -i {input.vcz} -o {output.pkl} > {log.out} 2> {log.err}
        """


rule burden_computing:
    threads: 8
    input:
        data=lambda wildcards:(f"{OUTPUT_DIR}/annotations/chr{wildcards.chrom}_data_test.pkl")
    output:
        parquet=f"{OUTPUT_DIR}/burdens/chr{{chrom}}_all_burdens_test_10_genes.parquet",
    log:
        out="burden_testing_logs/{chrom}_burden_comp_stdout.log",
        err="burden_testing_logs/{chrom}_burden_comp_stderr.err"
    shell:
        """
        python run_compute_burdens.py -c {wildcards.chrom} -i {input.data} -o {output.parquet} > {log.out} 2> {log.err}
        """

rule burden_association:
    threads: 8
    input:
        burdens=lambda wildcards:(f"{OUTPUT_DIR}/burdens/chr{wildcards.chrom}_all_burdens_test_10_genes.parquet"),
        data=lambda wildcards:(f"{OUTPUT_DIR}/annotations/chr{wildcards.chrom}_data_test.pkl"),
        eigenvector=f"{EIGENVECOTOR}",
        dump=f"{DUMP_DIR}",
    output:
        pkl=f"{OUTPUT_DIR}/association/chr{{chrom}}_all_results_10_genes.pkl",
    log:
        out="burden_testing_logs/{chrom}_burden_ass_stdout.log",
        err="burden_testing_logs/{chrom}_burden_ass_stderr.err"
    shell:
        """
        python run_burden_ass.py -c {wildcards.chrom} -b {input.burdens} -e {input.eigenvector} -d {input.data} --dump {input.dump} -o {output.pkl} > {log.out} 2> {log.err}
        """